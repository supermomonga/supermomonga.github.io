<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-04-11T15:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>友達ほしい</title>
    <link rel="alternate" href="http://blog.url.com/articles/others/tomodachihoshii.html"/>
    <id>http://blog.url.com/articles/others/tomodachihoshii.html</id>
    <published>2014-04-11T15:00:00Z</published>
    <updated>2014-04-12T03:01:41+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;かなり（すごく）&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>ジャズだって聴ける。そう、Vimならね。</title>
    <link rel="alternate" href="http://blog.url.com/articles/vim/jazzradio-vim-released.html"/>
    <id>http://blog.url.com/articles/vim/jazzradio-vim-released.html</id>
    <published>2014-04-08T15:00:00Z</published>
    <updated>2014-04-10T01:42:10+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://atnd.org/events/45072"&gt;Vim Advent Calendar 2013&lt;/a&gt;、130日目の記事になります。&lt;/p&gt;

&lt;h2 id="toc_0"&gt;jazzradio.vimをリリースしました&lt;/h2&gt;

&lt;p&gt;さて、私達が人間らしく生活していく上で最低限必要なものといえばなんでしょうか？ そう、Vimとジャズですね。ところでジャズといえば、&lt;a href="http://www.jazzradio.com/"&gt;JAZZRADIO.com&lt;/a&gt;という便利サイトをご存知でしょうか。こちらは、様々なジャンルのジャズをストリーミングで聴ける、オンラインのラジオサイトです。&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-04-09-jazzradio.png" /&gt;&lt;/p&gt;

&lt;p&gt;私は集中して作業を行いたい時はこのサイトを大いに活用しています。無料ですし、大変良い。&lt;/p&gt;

&lt;p&gt;ですが、ひとつだけ大きな欠点がありました。そう、たかだか音源をストリーミング再生するためだけに、ウェブブラウザを立ち上げておく必要があるのです。ただでさえメモリを食いつくすGoogleChrome、タブのひとつも増やしたくありません。そこでどうするかというと、お察しの通り、Vimです。&lt;/p&gt;

&lt;p&gt;というわけで、VimからJAZZRADIO.comの音楽を聴く事ができるプラグイン&lt;a href="https://github.com/supermomonga/jazzradio.vim"&gt;jazzradio.vim&lt;/a&gt;をリリースしました。&lt;/p&gt;

&lt;h2 id="toc_1"&gt;インストール方法&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/supermomonga/jazzradio.vim"&gt;jazzradio.vim&lt;/a&gt;は音楽のストリーミング再生部分に関して、&lt;code&gt;mplayer&lt;/code&gt;に依存しています。まずは、&lt;code&gt;mplayer&lt;/code&gt;をインストールしてください。&lt;code&gt;brew install mplayer&lt;/code&gt;、&lt;code&gt;sudo apt-get install -y mplayer&lt;/code&gt;など、お使いのOSに合わせてご自由にどうぞ。Windows版のバイナリ配布もされている様ですが、手元にWindows機が無いため動作は確認できませんでした。Windows対応のPull Requestなどお待ちしています。&lt;/p&gt;

&lt;p&gt;次に、プラグインをインストールします。おなじみ&lt;code&gt;NeoBundle&lt;/code&gt;の設定を記載しておきますので、&lt;code&gt;.vimrc&lt;/code&gt;に追加して&lt;code&gt;:Unite neobundle/install&lt;/code&gt;を行ってください。&lt;/p&gt;
&lt;pre class="highlight viml"&gt;NeoBundleLazy &lt;span class="s1"&gt;'supermomonga/jazzradio.vim'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'depends'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'Shougo/unite.vim'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; neobundle#tap&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'jazzradio.vim'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;call&lt;/span&gt; neobundle#config&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;   &lt;span class="s1"&gt;'autoload'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;     &lt;span class="s1"&gt;'unite_sources'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;       &lt;span class="s1"&gt;'jazzradio'&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;     &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;     &lt;span class="s1"&gt;'commands'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;       &lt;span class="s1"&gt;'JazzradioUpdateChannels'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;       &lt;span class="s1"&gt;'JazzradioStop'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;       &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;         &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'JazzradioPlay'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;         &lt;span class="s1"&gt;'complete'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'customlist,jazzradio#channel_id_complete'&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;       &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;     &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;     &lt;span class="s1"&gt;'function_prefix'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'jazzradio'&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt;   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="se"&gt;        \&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;endif&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;以上でインストールは完了です。&lt;/p&gt;

&lt;h2 id="toc_2"&gt;使用方法&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/supermomonga/jazzradio.vim"&gt;jazzradio.vim&lt;/a&gt;をインストールしたら、まずはチャンネル一覧の情報を取得しましょう。&lt;code&gt;:JazzradioUpdateChannels&lt;/code&gt;コマンドを実行することで、チャンネル一覧の情報を取得しローカルにキャッシュします。このコマンドの実行には少し時間がかかります。&lt;/p&gt;

&lt;p&gt;以上で準備は完了です。&lt;code&gt;:Unite jazzradio&lt;/code&gt;コマンドを実行すればジャンルごとのチャンネル一覧が表示されますので、お好きなチャンネルを選択してください。バックグラウンドで再生が始まります。&lt;code&gt;mplayer&lt;/code&gt;経由で再生したほうがブラウザ経由よりも音質が良い感じがしますね。&lt;/p&gt;

&lt;p&gt;Unite.vimを経由せず、&lt;code&gt;:JazzradioPlay [channel_id]&lt;/code&gt;コマンドで直接再生を開始することもできます。また、再生をストップしたい時は&lt;code&gt;:JazzradioStop&lt;/code&gt;コマンドを実行してください。&lt;/p&gt;

&lt;h2 id="toc_3"&gt;今後の予定&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ドキュメント書いてないので書く（ドキュメントないのひどい…）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:JazzradioUpdateChannels&lt;/code&gt;コマンドを非同期で実行、Unite.vimのインターフェイスで取得状況をリアルタイム表示するようにする&lt;/li&gt;
&lt;li&gt;ボリューム操作、一時停止機能などを実装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mplayer&lt;/code&gt;操作部分を外部ライブラリとして分離&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="toc_4"&gt;まとめ&lt;/h2&gt;

&lt;p&gt;ジャンルがジャズに該当するかどうかは置いておくとして、&lt;code&gt;小島麻由美&lt;/code&gt;とか&lt;code&gt;EGO-WRAPPIN&amp;#39;&lt;/code&gt;とか&lt;code&gt;SWING HOLIC&lt;/code&gt;とか好きです。&lt;/p&gt;

&lt;h2 id="toc_5"&gt;おわり&lt;/h2&gt;

&lt;p&gt;おわり&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>momonga.vim #3 に行ってきた</title>
    <link rel="alternate" href="http://blog.url.com/articles/vim/momongavim-3-report.html"/>
    <id>http://blog.url.com/articles/vim/momongavim-3-report.html</id>
    <published>2014-03-31T15:00:00Z</published>
    <updated>2014-04-01T08:44:53+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://atnd.org/events/45072"&gt;Vim Advent Calendar 2013&lt;/a&gt;、122日目の記事になります。&lt;/p&gt;

&lt;h2 id="toc_0"&gt;momonga.vim #3 に行ってきました&lt;/h2&gt;

&lt;p&gt;momonga.vim #3 に参加してきましたので、レポート記事を投稿したいと思います。&lt;/p&gt;

&lt;p&gt;momonga.vim #3 は、なんと朝10時から夜10時までの12時間、かつ20人規模での開催という、今までで一番大きな規模の momonga.vim となりました。#1が5人、#2が13人、今回が20人なので、このペースだとあと10回くらい開催で武道館行くことになると思います。&lt;/p&gt;

&lt;h2 id="toc_1"&gt;写真&lt;/h2&gt;

&lt;h3 id="toc_2"&gt;プロジェクタによる成果発表&lt;/h3&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-04-01-1.jpg" class="full" /&gt;&lt;/p&gt;

&lt;h3 id="toc_3"&gt;ルービックキューブでVimを操作しています（嘘）&lt;/h3&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-04-01-2.jpg" class="full" /&gt;&lt;/p&gt;

&lt;h3 id="toc_4"&gt;22時まで生き残った面々&lt;/h3&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-04-01-3.jpg" class="full" /&gt;&lt;/p&gt;

&lt;h2 id="toc_5"&gt;感想&lt;/h2&gt;

&lt;p&gt;かなり長時間の開催なので今回は途中参加・途中退室自由にしたのですが、開始1時間ほどで20人全員が集うという事態に。Vimmerのバイタリティすごいですね。それから皆夕方あたりまでもくもくして、成果発表など交えつつ夕方頃に約半数の方が帰宅。大変お疲れ様でした。&lt;/p&gt;

&lt;h2 id="toc_6"&gt;二次会&lt;/h2&gt;

&lt;p&gt;その後二次会としてカラオケ店に入って、朝まで徹夜Vimでした。メンツはdictavさん、さっちゃんさん、ぼくさん、thincaさん、meirakaさん、ももんがさんの6人でした。私とthincaさんが微妙に歌ったり、rubyの黒魔術をやろうとしたり、ごはんたべたり、寝たりしました。半分寝てた。&lt;/p&gt;

&lt;h2 id="toc_7"&gt;まとめ&lt;/h2&gt;

&lt;p&gt;大変楽しい一日を過ごせました。参加して下さった皆さんありがとうございます。&lt;/p&gt;

&lt;p&gt;今後も定期的に momonga.vim を開催していきたいと思います。momonga.vim は初心者歓迎なので、この記事を読んで興味が沸いたという方は、ぜひ momonga.vim #4 への参加をご検討ください。&lt;/p&gt;

&lt;h2 id="toc_8"&gt;おわり&lt;/h2&gt;

&lt;p&gt;おわり&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>hiはスポーツ</title>
    <link rel="alternate" href="http://blog.url.com/articles/neta/hi-is-sports.html"/>
    <id>http://blog.url.com/articles/neta/hi-is-sports.html</id>
    <published>2014-03-31T15:00:00Z</published>
    <updated>2014-04-01T14:03:36+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://lingr.com/room/momonga/archives/2014/03/30#message-18686883"&gt;http://lingr.com/room/momonga/archives/2014/03/30#message-18686883&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-04-01-hi_is_sports.png" /&gt;&lt;/p&gt;

&lt;h2 id="toc_0"&gt;おわり&lt;/h2&gt;

&lt;p&gt;おわり&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>実際に読んで分かった、はてなJSのダメなコード</title>
    <link rel="alternate" href="http://blog.url.com/articles/javascript/hatena-js-peropero.html"/>
    <id>http://blog.url.com/articles/javascript/hatena-js-peropero.html</id>
    <published>2014-03-14T15:00:00Z</published>
    <updated>2014-03-15T10:40:03+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2 id="toc_0"&gt;はてなブログJSについて&lt;/h2&gt;

&lt;p&gt;最近話題になってるはてなブログのjavascriptですが、このブログをMiddlemanで構築した時に「はてなブックマークブログパーツ」のjavascriptコードを読んでげんなりしたのを思い出したので、この際ついでにこっちも公にしておこうかと思って記事にします。はてなブログのJSではないという意味でタイトルは釣りです。&lt;/p&gt;

&lt;h2 id="toc_1"&gt;はてなブックマークブログパーツとは&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://b.hatena.ne.jp/guide/blogparts"&gt;はてなブックマークブログパーツ&lt;/a&gt;とは、あなたがお持ちのブログにはてなブックマークの各種情報を貼り付けることができるブログパーツです。はてなが提供しているHTMLタグとjavascriptの読み込みコードを貼り付けることで設置することができます。&lt;/p&gt;

&lt;p&gt;ブログパーツは複数種類あるのですが、今回はこのブログに貼ろうとした「ブックマークのコメントを表示」というパーツのコードを読んでみます。&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-03-15-blogparts.png" class="full" /&gt;&lt;/p&gt;

&lt;h2 id="toc_2"&gt;ブログパーツの設置方法&lt;/h2&gt;

&lt;p&gt;さて、&lt;a href="http://b.hatena.ne.jp/guide/blogparts.select?type=blogparts"&gt;ブログパーツの設置方法解説ページ&lt;/a&gt;には、以下の2ステップでブログパーツを貼り付けできると解説されています。&lt;/p&gt;

&lt;h3 id="toc_3"&gt;javascriptの読み込みとデフォルト設定の記述&lt;/h3&gt;
&lt;pre class="highlight html"&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"http://b.hatena.ne.jp/js/bookmark_blogparts.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;commentInsertSelector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'div.hatena-bookmark-marker'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'div.article-body-inner'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'div.blogbody div.mainmore'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'div.blogbody div.main'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'div.entry-body-main'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertPosition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'after'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permalinkSelector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'div.hatena-bookmark-marker a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'div h3 a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'h2.title a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'h2.entry-title a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'.posted a'&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permalinkPathRegexp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/\/archives\/\d+\.html$/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permalinkAttribute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'href'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;1行目では&lt;a href="http://b.hatena.ne.jp/js/bookmark_blogparts.js"&gt;http://b.hatena.ne.jp/js/bookmark_blogparts.js&lt;/a&gt;を読み込み、2行目以降ではどうもオプションの設定を行っている様です。&lt;/p&gt;

&lt;h3 id="toc_4"&gt;ブックマークコメント一覧を表示したい位置にdivタグを設置&lt;/h3&gt;
&lt;pre class="highlight html"&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hatena-bookmark-marker"&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"display:none;"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"※"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;※）設置ブログ記事ページのURL&lt;/p&gt;

&lt;p&gt;どうやら、&lt;code&gt;hatena-bookmark-marker&lt;/code&gt;というclassが指定されたdivタグの中身がブックマークコメント一覧に置き換えられる様ですね。&lt;/p&gt;

&lt;h3 id="toc_5"&gt;オプション設定の変更&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://developer.hatena.ne.jp/ja/documents/bookmark/misc/comment_blogparts"&gt;はてなブックマークコメント表示ブログパーツ&lt;/a&gt;というページを見ると、オプション一覧の解説とオプションの書き換え方法が記載されています。これらのオプションを使って挙動や見た目をカスタマイズするらしいですね。&lt;/p&gt;

&lt;h2 id="toc_6"&gt;問題点&lt;/h2&gt;

&lt;p&gt;ここで結論から言ってしまうと、このjavascriptスクリプトのオプション指定方法には問題があり、オプションの指定が利きません。&lt;/p&gt;

&lt;p&gt;解説します。&lt;/p&gt;

&lt;h3 id="toc_7"&gt;オプション用プロパティの宣言と上書き&lt;/h3&gt;

&lt;p&gt;このjavascriptコードは、オプション設定をグローバル変数&lt;code&gt;HBBlogParts&lt;/code&gt;というオブジェクトのプロパティを自分の好きな値で宣言することで指定できる様な形式にしています。&lt;/p&gt;

&lt;p&gt;ここで、javascriptのコードを実際に読んでみましょう。&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;span class="c1"&gt;//alert('start');
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'undefined'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_alreadyShown&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shownPermalinks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;catchCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;一番最初のコードがこれです。この後この&lt;code&gt;HBBlogParts&lt;/code&gt;というオブジェクトのプロパティに、実際にはてなブックマークコメントを取得してブログのDOMに追加していく処理を持った関数が宣言されていきます。次に後半のコードを見ます。&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Design&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useUserCSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cssName&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'basic'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listPageCommentLimit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permalinkCommentLimit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;hatenaRegexp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'^https?://[^/]+.hatena.ne.jp/([^/]+)/'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;hatenaRegexp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hatenaRegexp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isHatenaService&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'g.hatena.ne.jp'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;commentInsertSelector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'div.section'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permalinkCommentInsertSelector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'div.comment'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'div.section'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;commentInsertSelector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'div.section'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertPosition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'after'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permalinkSelector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'div.section h3 a'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permalinkAttribute&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'href'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permalinkPathRegexp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'/\\d{8}'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useCanonicalizedURI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listPageCommentLimit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;permalinkCommentLimit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;HBBlogPartsFromBookmarklet&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'undefined'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'From Bookmark let'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;HBBlogParts.register&lt;/code&gt;という関数が呼ばれていますね。この関数はページのDOMロード完了を監視して、完了した時点で&lt;code&gt;HBBlogParts.start&lt;/code&gt;という関数を呼びます。&lt;code&gt;HBBlogParts.start&lt;/code&gt;は実際にブックマークコメントを取得してDOMを書き換えるメインルーチンです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;あれっちょっとまって…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;これ、&lt;code&gt;HBBlogParts.register&lt;/code&gt;関数を呼ぶ直前に、各オプションをデフォルト値で上書きしてませんか？&lt;/p&gt;

&lt;p&gt;実際に、&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listPageCommentLimit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;HBBlogParts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Design&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'t'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'c'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'s'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;とか指定しても、ブラウザのデベロッパーコンソールで&lt;code&gt;HBBlogParts&lt;/code&gt;のプロパティを見ると、やはりデフォルト値で上書きされてしまっています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;HBBlogParts.permalinkURI&lt;/code&gt;や&lt;code&gt;HBBlogParts.permalinkPathRegexp&lt;/code&gt;といったブログパーツの動作に不可欠なオプションはさすがに上書きされていないようですが、&lt;code&gt;HBBlogParts.Design&lt;/code&gt;の様な、デフォルト値でもとりあえず動作するといったプロパティの多くがデフォルト値で上書きされています。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;オプション設定とはなんだったのか…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;処理の流れからして、どうしてもオプション指定をしたい場合、「&lt;code&gt;HBBlogParts.register&lt;/code&gt;が呼ばれた後」かつ「ページのDOM読み込みが完了して実際に&lt;code&gt;HBBlogParts.start&lt;/code&gt;関数の処理が開始されてしまう前」といったピンポイントのタイミングで、非同期的にこれら&lt;code&gt;HBBlogParts&lt;/code&gt;オブジェクトのプロパティを書き換える必要があります。難易度高い…&lt;/p&gt;

&lt;h2 id="toc_8"&gt;こう改善してほしい&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;オプションを問答無用でデフォルト値で上書きするのやめて…&lt;/li&gt;
&lt;li&gt;どうせ表示したい位置にdivタグを設置するのだから、グローバル変数のプロパティを書き換えるのでなく、&lt;code&gt;data-*&lt;/code&gt;属性で各オプション設定を指定できるようにしてほしい

&lt;ul&gt;
&lt;li&gt;そうすれば&lt;code&gt;HBBlogParts&lt;/code&gt;という変数でグローバル汚染しなくてもよいのでは。よくわかんないけど。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ついでにこっちもminifyとかgzip配信とかやってほしい&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="toc_9"&gt;まとめ&lt;/h2&gt;

&lt;p&gt;はてなさんがやる気になってるっぽいですし、なんか直接報告しても反応ないという噂なので、便乗して公にしてブログパーツウィジェットのJSも改善してもらおうという記事でした。ブコメ一覧ウィジェット使いたいです。よろしくお願いします。&lt;/p&gt;

&lt;p&gt;あと、私は普段Rubyばかり書いていてjavascriptにはあまり詳しくはないので、もし間違いがあれば訂正してお詫びします。という予防線を張っておきます。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rubyistが始めるElixir - フィボナッチ編</title>
    <link rel="alternate" href="http://blog.url.com/articles/elixir/elixir-fibonacci.html"/>
    <id>http://blog.url.com/articles/elixir/elixir-fibonacci.html</id>
    <published>2014-03-14T15:00:00Z</published>
    <updated>2014-03-15T18:43:40+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2 id="toc_0"&gt;Ruby版&lt;/h2&gt;
&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Fib&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nc"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fib&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
    &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;Float&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;INFINITY&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="no"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'n'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="no"&gt;Fib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fib&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="no"&gt;Fib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fib&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="no"&gt;Fib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fib&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Rubyのcaseによるパターンマッチは強力ですね。&lt;/p&gt;

&lt;h2 id="toc_1"&gt;Elixir版&lt;/h2&gt;
&lt;pre class="highlight elixir"&gt;&lt;span class="k"&gt;defmodule&lt;/span&gt; &lt;span class="no"&gt;Fib&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_integer&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;IO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;puts&lt;/span&gt; &lt;span class="no"&gt;Fib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fib&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="no"&gt;IO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;puts&lt;/span&gt; &lt;span class="no"&gt;Fib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fib&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
&lt;span class="no"&gt;IO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;puts&lt;/span&gt; &lt;span class="no"&gt;Fib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fib&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;メソッド引数のパターンマッチ・ガードがいい感じですね。&lt;/p&gt;

&lt;p&gt;ただ、パターンガードで型制約はちょっと見栄えが微妙な感じもしますね。&lt;/p&gt;
</content>
  </entry>
</feed>
