<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-03-05T15:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>3/21日に東京でVim勉強会を開催します</title>
    <link rel="alternate" href="http://blog.url.com/articles/vim/momongavim-3.html"/>
    <id>http://blog.url.com/articles/vim/momongavim-3.html</id>
    <published>2014-03-05T15:00:00Z</published>
    <updated>2014-03-07T00:54:42+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://atnd.org/events/45072"&gt;Vim Advent Calendar 2013&lt;/a&gt;、96日目の記事になります。&lt;/p&gt;

&lt;h2 id="toc_0"&gt;3/21日に東京でVim勉強会を開催します&lt;/h2&gt;

&lt;p&gt;今日はtips記事でもプラグインリリース記事でもなく、Vim勉強会のお知らせです。&lt;/p&gt;

&lt;p&gt;私が主催しているVimの勉強会、momonga.vimの第三回が今月の21日に開催されます。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://partake.in/events/52a7b249-5183-4f1a-9e4f-22c1f0e436a5"&gt;momonga.vim #3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;勉強会と書きましたが、実質はもくもく会で、各々がVimに関して好きなことをただひたすらやるみたいな会です。&lt;/p&gt;

&lt;p&gt;第二回では十数人規模の会場で大体5時間くらいやったのですが、予想以上に申し込みがあり、何人かの方が残念ながら参加できないということがありました。
そのため高まった私が今回は20人規模の会場を押さえ、かつほぼ丸一日貸しきるみたいな感じになっています。&lt;/p&gt;

&lt;p&gt;3月6日現時点で申込数は13人で、まだあと7人の空きがあります。
会場は一日貸し切りですが、途中参加・途中離脱OKなゆるふわ会ですので、数時間だけ参加してみようかなという方もぜひ来てみてください。&lt;/p&gt;

&lt;p&gt;場所は&lt;a href="http://www.musashino.or.jp/place/_1150.html"&gt;武蔵野プレイスのスペースE&lt;/a&gt;です。おしゃれ！&lt;/p&gt;

&lt;p&gt;参加費は1人500円で、飲み物やお菓子などが適当に用意されます。
昼食や夕食を食べる場合や、二次会に参加する場合はそのお金は別途各々が払うみたいな感じです。&lt;/p&gt;

&lt;p&gt;タイムスケジュールや場所などのより詳しい情報や、参加の申し込みは&lt;a href="http://partake.in/events/52a7b249-5183-4f1a-9e4f-22c1f0e436a5"&gt;momonga.vim #3のPARTAKEページ&lt;/a&gt;からお願いします。&lt;/p&gt;

&lt;p&gt;momonga.vim は初心者歓迎ですし、実際に今回&lt;code&gt;sudo yum install vim&lt;/code&gt;から始めるみたいな人も来る模様です。むしろ俺は&lt;a href="http://d.hatena.ne.jp/tarao/20130303/evil_intro"&gt;Evil&lt;/a&gt;の設定を弄るみたいな人でも大丈夫だと思いますので、よろしければぜひお気軽に。&lt;/p&gt;

&lt;h2 id="toc_1"&gt;おわり&lt;/h2&gt;

&lt;p&gt;おわり&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>ansuzのやつ</title>
    <link rel="alternate" href="http://blog.url.com/articles/ruby/ansuz.html"/>
    <id>http://blog.url.com/articles/ruby/ansuz.html</id>
    <published>2014-02-15T15:00:00Z</published>
    <updated>2014-02-16T08:17:17+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://funisaya-ac2013.herokuapp.com/"&gt;ansuz&lt;/a&gt;4番目の担当でした。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;担当の二週間の、前半一週間で、「これは自分のものとしてともかくやるんだ」というものを制作してください。「これは自分のものとしてともかくやるんだ」ということだけが重要です。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;はい。私はコードを書くしかないと思っているので、コードを書きました。そして音ができます。&lt;/p&gt;

&lt;h2 id="toc_0"&gt;書きます&lt;/h2&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-02-16-7.56.26.png" class="full" /&gt;&lt;/p&gt;

&lt;p&gt;プログラムのソースコードを食べて音をつくるものができます。
ごく基本的な音楽の知識しかないので、コード進行がいい感じになるくらいのかしこさしかないです。&lt;/p&gt;

&lt;h2 id="toc_1"&gt;食べさせる&lt;/h2&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-02-16-7.56.52.png" class="full" /&gt;&lt;/p&gt;

&lt;p&gt;自分自身を食べさせます。自分を音楽にします。quineみたいですね、と思ったけどよく考えたら全然quineみたいではないです。&lt;/p&gt;

&lt;p&gt;midiができます。&lt;/p&gt;

&lt;h2 id="toc_2"&gt;調整&lt;/h2&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-02-16-7.58.02.png" class="full" /&gt;&lt;/p&gt;

&lt;p&gt;GarageBandで調整しましょう&lt;/p&gt;

&lt;h2 id="toc_3"&gt;できる&lt;/h2&gt;

&lt;iframe class="soundcloud" width="100%" height="450" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/135025481&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;visual=true"&gt;&lt;/iframe&gt;

&lt;p&gt;できた。&lt;/p&gt;

&lt;h2 id="toc_4"&gt;おわり&lt;/h2&gt;

&lt;p&gt;おわり。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>プロジェクトのハンドリングを効率化するプラグイン、ProjectLocal.vimをリリースしました。</title>
    <link rel="alternate" href="http://blog.url.com/articles/vim/projectlocal-vim-released.html"/>
    <id>http://blog.url.com/articles/vim/projectlocal-vim-released.html</id>
    <published>2014-02-04T15:00:00Z</published>
    <updated>2014-02-05T01:57:16+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://atnd.org/events/45072"&gt;Vim Advent Calendar 2013&lt;/a&gt;、66日目の記事になります。&lt;/p&gt;

&lt;h2 id="toc_0"&gt;ProjectLocal.vimをリリースしました&lt;/h2&gt;

&lt;p&gt;プロジェクトのハンドリングを効率化する薄い機能を提供するプラグイン、ProjectLocal.vimをリリースしましたのでご紹介します。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/supermomonga/projectlocal.vim"&gt;https://github.com/supermomonga/projectlocal.vim&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="toc_1"&gt;ProjectLocal.vimの機能&lt;/h2&gt;

&lt;p&gt;プロジェクトのルートディレクトリに&lt;code&gt;Projectfile&lt;/code&gt;という名前のファイルを配置すると、そのディレクトリは1つのプロジェクトとして扱われるようになり、ディレクトリ以下のファイルを開いた時に以下の2つの機能が発動します。&lt;/p&gt;

&lt;h3 id="toc_2"&gt;1. プロジェクトルートディレクトリの設定&lt;/h3&gt;

&lt;p&gt;ProjectLocal.vimは、現在開いているファイルのプロジェクトのルートディレクトリを、ファイル（バッファ）のローカル変数に自動でセットします。これにより、プロジェクト内のどのファイルを開いた時も、常にバッファがプロジェクトルートの位置を知ることができます。具体的には、&lt;code&gt;b:projectlocal_root_dir&lt;/code&gt;というバッファローカル変数にパスがセットされます。&lt;/p&gt;

&lt;h3 id="toc_3"&gt;2. プロジェクト用filetypeの自動設定&lt;/h3&gt;

&lt;p&gt;プロジェクト内のファイルを開いた時、そのファイルのfiletypeに、予め設定したfiletypeを付加することができます。たとえば、&lt;code&gt;.rb&lt;/code&gt;ファイルを開いた時、通常は&lt;code&gt;ruby&lt;/code&gt;というfiletypeが設定されますが、自動で&lt;code&gt;rails&lt;/code&gt;というfiletypeが付加されるように設定することが可能になります。ちなみに、Vimにおいて1つのバッファに複数のfiletypeを割り当てたい時は、それらを&lt;code&gt;.&lt;/code&gt;（ドット記号）で連結します。この場合は&lt;code&gt;ruby.rails&lt;/code&gt;になるわけですね。&lt;/p&gt;

&lt;p&gt;この設定はプロジェクト毎に変えることができます。方法は簡単で、&lt;code&gt;Projectfile&lt;/code&gt;の中に、設定したいfiletypeをカンマ区切りもしくは改行区切りで記載するだけです。&lt;/p&gt;

&lt;h2 id="toc_4"&gt;ProjectLocal.vimの利用例&lt;/h2&gt;

&lt;p&gt;ProjectLocal.vimは、それ単体では利便性に直接影響することはない、薄い機能を持った低レイヤプラグインです。ここでは、ProjectLocalの便利な利用例をご紹介します。&lt;/p&gt;

&lt;h3 id="toc_5"&gt;プロジェクト内のファイルのみ検索するUniteコマンドを呼び出す&lt;/h3&gt;

&lt;p&gt;特定のプロジェクトに関するプログラミングを行っている時、そのプロジェクトに関係するファイルのみを対象に検索したいことがあると思います。そのような場合、gitなどのVCSで管理されているディレクトリはUnite.vimの標準機能で検索を行うことができますが、すべてのプロジェクトが必ずしもVCSで管理されているとは限りませんし、プロジェクト内でも更に細かくスコープを分けたいなどの要望があると思います。&lt;/p&gt;

&lt;p&gt;そういった場合、ProjectLocal.vimにて任意の場所に&lt;code&gt;Projectfile&lt;/code&gt;を配置することで、簡単にプロジェクト、もしくはプロジェクトの一部のファイルを検索することができるようになります。&lt;/p&gt;

&lt;h4 id="toc_6"&gt;.vimrc&lt;/h4&gt;
&lt;pre class="highlight viml"&gt;nnoremap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Space&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;p&lt;/span&gt;  &lt;span class="p"&gt;:&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;u&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;call&lt;/span&gt; Unite_project_files&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-start-insert'&lt;/span&gt;&lt;span class="p"&gt;)&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; Unite_project_files&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; exists&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'b:projectlocal_root_dir'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    execute &lt;span class="s1"&gt;':Unite file_rec/async:'&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;b:projectlocal_root_dir&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;a:options&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    echo &lt;span class="s2"&gt;"You are not in any project."&lt;/span&gt;
  &lt;span class="k"&gt;endif&lt;/span&gt;
&lt;span class="k"&gt;endfunction&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Unite.vimのfire&lt;em&gt;rec/asyncというソースは、引数として検索対象のディレクトリを取ることができます。これを利用して、`b:projectlocal&lt;/em&gt;root_dir`が存在する場合はその値を引数として渡す関数を実装し、キーバインドに割り当てています。&lt;/p&gt;

&lt;h3 id="toc_7"&gt;プロジェクト毎に最適なUniteコマンドを呼び出す&lt;/h3&gt;

&lt;p&gt;同じキーバインドでも、状況によって最適な内容を実行してくれたら素敵です。ここでは、Unite.vimを例に、普段はディスク全体を対象にファイルを列挙するが、railsプロジェクトを開いている時には&lt;code&gt;unite-rails&lt;/code&gt;というRails用のUnite sourceを呼び出すといった設定を行ってみます。&lt;/p&gt;

&lt;h4 id="toc_8"&gt;Projectfile&lt;/h4&gt;
&lt;pre class="highlight plaintext"&gt;rails
&lt;/pre&gt;
&lt;h4 id="toc_9"&gt;.vimrc&lt;/h4&gt;
&lt;pre class="highlight viml"&gt;nnoremap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Space&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;j&lt;/span&gt;  &lt;span class="p"&gt;:&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;u&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Unite file_mru&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;s:unite_rails_init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  nnoremap &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;buffer&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Space&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;j&lt;/span&gt;  &lt;span class="p"&gt;:&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;u&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Unite rails&lt;span class="sr"&gt;/model rails/&lt;/span&gt;controller rails&lt;span class="sr"&gt;/view rails/&lt;/span&gt;db rails&lt;span class="sr"&gt;/config rails/&lt;/span&gt;javascript rails&lt;span class="sr"&gt;/stylesheet rails/&lt;/span&gt;helper rails/mailer&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;endfunction&lt;/span&gt;

aug MyAutoCmd
  &lt;span class="k"&gt;au&lt;/span&gt; &lt;span class="nb"&gt;FileType&lt;/span&gt; *rails* &lt;span class="k"&gt;call&lt;/span&gt; &lt;span class="nv"&gt;s:unite_rails_init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
aug END
&lt;/pre&gt;
&lt;p&gt;このように、&lt;code&gt;&amp;lt;Space&amp;gt;j&lt;/code&gt;というキーバインドに対して、普段は&lt;code&gt;file_mru&lt;/code&gt;ソースを呼び出すものの、railsのプロジェクトでは&lt;code&gt;unite-rails&lt;/code&gt;のソースを呼び出すといった設定を完結に記載することができました。AutoCmdのパターンは完全一致なので、&lt;code&gt;*&lt;/code&gt;で囲むことで&lt;code&gt;ruby.rails&lt;/code&gt;などといったfiletypeにもマッチする様な工夫を行っています。&lt;/p&gt;

&lt;h2 id="toc_10"&gt;まとめ&lt;/h2&gt;

&lt;p&gt;ProjectLocal.vimを利用することで、現在どのプロジェクトのファイルを開いているのか、プロジェクトの種類はなんなのか、プロジェクトのルートディレクトリはどこなのか、といった情報が提供されるようになり、プロジェクトに依存する固有の設定が格段に行い易くなりました。小さい実装ながらも強力なプラグインですので、皆さんもぜひお試し頂ければと思います。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>momonga.vim #2.2 進捗のVimmer</title>
    <link rel="alternate" href="http://blog.url.com/articles/vim/momongavim-2_2.html"/>
    <id>http://blog.url.com/articles/vim/momongavim-2_2.html</id>
    <published>2014-02-01T15:00:00Z</published>
    <updated>2014-02-02T17:01:56+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h2 id="toc_0"&gt;momonga.vim #2.2 に参加しました&lt;/h2&gt;

&lt;p&gt;momonga.vim #2.2 に参加してきましたので、レポート記事を投稿したいと思います。&lt;/p&gt;

&lt;p&gt;momonga.vim #2.2 は、#2 開催から時間が経ったものの、会場の予約の都合上#3まで時間が空きすぎて、Vimもくもく会成分が欠如して生活に支障が出そうということで企画された少人数のvimもくもく会です。小数点付きの回は大体このような少人数もくもく会を指します。&lt;/p&gt;

&lt;h2 id="toc_1"&gt;集合&lt;/h2&gt;

&lt;p&gt;12:20頃、ももんがさんの家に集合しました。私はももんがさんなのでももんがさんの家までは徒歩0分の距離であり、労せず到着することができました。&lt;/p&gt;

&lt;p&gt;参加者は私を含めて以下の5人です。前回の #2.1 も同じメンツでした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;@deris0126 （derisさん）&lt;/li&gt;
&lt;li&gt;@Linda_pp （りんだんさん）&lt;/li&gt;
&lt;li&gt;@rbtnn （rbtnnさん）&lt;/li&gt;
&lt;li&gt;@thinca （thincaさん）&lt;/li&gt;
&lt;li&gt;@supermomonga （ももんがさん）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="toc_2"&gt;昼食&lt;/h2&gt;

&lt;p&gt;集まったので昼食です。最近糖質制限をしているのですが、誰かと一緒にごはんを食べるときは制限しないという例外を敷いているので、thincaさんの希望もありラーメンになりました。&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-02-01-lunch.jpg" class="full" /&gt;&lt;/p&gt;

&lt;h2 id="toc_3"&gt;もくもく会&lt;/h2&gt;

&lt;p&gt;もくもくしました。だいぶもくもくしたので煙がすごいでたと思います。&lt;/p&gt;

&lt;p&gt;VCS.vim、puyo.vimにぷよテト実装、オプションパーサ、Sidecar、duzzleアップデート、みたいによくわからないけど各々の心にプレッシャーが発生する呪文を各自が唱え合ってた気がします。&lt;/p&gt;

&lt;p&gt;私の場合、その成果として、ThingsPast.vimへのシンタックスや各種Hook追加を行い大々的にリファクタリングしたメジャーバージョンアップ版のリリースや長らく構成を決めかねていたSidecar.vimの正式版リリースに加えて放置されているFAX Advent Calendar 2013のネタプラギンを颯爽と完成させものすごい進捗を叩きだしたということは一切なくてvimrcを整理して小さいプラギンを新しく1つ作っただけでした。このプラギンは&lt;a href="https://github.com/supermomonga/projectlocal.vim"&gt;projectlocal.vim&lt;/a&gt;というもので、近日中に解説記事を書きます。&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-02-01-mokumoku.jpg" class="full" /&gt;&lt;/p&gt;

&lt;p&gt;お菓子よかった。&lt;/p&gt;

&lt;h2 id="toc_4"&gt;夕食&lt;/h2&gt;

&lt;p&gt;20時頃。中華料理屋さん行きました。私はレバ野菜炒めと餃子。900円。
derisさんとthincaさんはお昼にラーメン食べたのにまた麺類を食べていました。&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-02-01-dinner.jpg" class="full" /&gt;&lt;/p&gt;

&lt;p&gt;ここで翌日予定のあるderisさんとはお別れしました。お疲れ様でした。&lt;/p&gt;

&lt;h2 id="toc_5"&gt;vimrc読書会に参加&lt;/h2&gt;

&lt;p&gt;毎週土曜日の23時からオンラインのチャットルームで開催されているvimrc読書会が始まりました。せっかくなので、みんなで参加します。というか、今回読まれたのは私のvimrcでした。&lt;/p&gt;

&lt;p&gt;&lt;a href="http://vim-jp.org/reading-vimrc/archive/083.html"&gt;第83回 vimrc読書会&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="toc_6"&gt;徹夜もくもく会&lt;/h2&gt;

&lt;p&gt;徹夜でもくもく会をして、みんなでものすごい進捗を出しました。私は、アイマスクをつけて横たわり毛布を纏うという姿勢で、今後もっと日本のVimシーンを盛り上げていくにはどうすればよいのかについて、とても真剣に瞑想を行っていました。朝まで。なので寝ていたわけではないです。&lt;/p&gt;

&lt;h2 id="toc_7"&gt;朝&lt;/h2&gt;

&lt;p&gt;&lt;img src="/images/uploads/2014-02-02-morning.jpg" class="full" /&gt;&lt;/p&gt;

&lt;p&gt;朝モスしました。&lt;/p&gt;

&lt;p&gt;その後ちょっともくもくしたようなしなかったような感じで、昼前に解散しました。&lt;/p&gt;

&lt;h2 id="toc_8"&gt;まとめ&lt;/h2&gt;

&lt;p&gt;最近私事によりかなり忙しく、Vim活ができていなかったので、かなりよい休日を過ごすことができました。参加者の皆さんありがとうございます。&lt;/p&gt;

&lt;p&gt;momonga.vim #2.2 に来てくださった他のみなさんも、参加レポート記事を書いてくれると思うので、期待しています。&lt;/p&gt;

&lt;p&gt;来月、3月には最大20人規模の&lt;a href="http://partake.in/events/52a7b249-5183-4f1a-9e4f-22c1f0e436a5"&gt;momonga.vim #3&lt;/a&gt;が開催予定なので、Vimに関して一日中もくもくしてみたい方は、よろしければご参加ください。&lt;/p&gt;

&lt;h2 id="toc_9"&gt;おわり&lt;/h2&gt;

&lt;p&gt;おわり&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>人間のよさについて</title>
    <link rel="alternate" href="http://blog.url.com/articles/others/hai.html"/>
    <id>http://blog.url.com/articles/others/hai.html</id>
    <published>2014-02-01T15:00:00Z</published>
    <updated>2014-02-02T21:57:17+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;おれはじぶんの「嫌いだ」といふ印象を信用しないことにしてゐる。その「嫌いだ」といふのは、たいていは相手の一部だけについて感じたり言ったりしてゐるので、相手の全人格のほうへ関心をのばせば考慮や納得のする根拠があるのがほとんどだ。さういふただ部分についてだけで「嫌いだ」といふ判断をするのは、間違ってゐるとおもふ。そんな判断の仕方は無くなるのが理想だとおもってゐる。常不軽菩薩のやうな超人になれといふのは言ひ過ぎで、「嫌い」なのは「嫌い」でいいんだ。だがそれには、全人格と全現在をかんがへなければならない。それを放棄したときにおれは死ぬ。ひとつずつ進んでゆくしかないのだとおもふ。
&lt;cite&gt;&lt;a href="http://c4se.hatenablog.com/entry/2014/02/02/081234"&gt;http://c4se.hatenablog.com/entry/2014/02/02/081234&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- --&gt;

&lt;blockquote&gt;
&lt;p&gt;私は、自分のことを省みてみろ、自分の子供だったころのことを考えてみろよ、という事で尽きますし、あとは吉本隆明さんが言っているのに付け加えることもないので、黙っています。
&lt;cite&gt;&lt;a href="http://c4se.hatenablog.com/entry/2012/07/05/200405"&gt;http://c4se.hatenablog.com/entry/2012/07/05/200405&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;この点について私は恐らく、概ね同じような考えを持っていて、誰かと接する時、その相手が過去に何をやったであるとか、どういう欠点があるのだとか、そういった事柄で相手の人格を判断しないように、極力している。欠点があることや間違いを犯すのはあたりまえのことで、その点だけで相手を判断して交流を行う、もしくは行わないということをやっていると、なにか人間の「よさ」のようなものに対する感度が次第に鈍っていってしまう様に思える。そんな考えに至るのは自分の欠点に対する免罪符であると言われてしまえば完全には否定できない。そうかもしれない、と思う。でも、とにかくこの考え方が私にはしっくりくるし、合っているのだと思う。&lt;/p&gt;

&lt;p&gt;これは私の生き方の指針であり自分の中で完結している問題であるので他人は関係なく、また広く同意を得られる様な考え方ではないと思っている。なので、私がこういった考え方をしているということを誰かに言ったり、文章にしたりすることはなかった。ところが、意外に身近な所からこういった文章が出てきたので、そういった価値観の人も少なくはないのかもしれない、と思い、つい文章にしてしまった。普段あまり文章を書かない人間なので考えや意図が正確に伝わる文章かはわからない。おわり。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Vimによる通知センター実装、ThingsPast.vimをリリースしました</title>
    <link rel="alternate" href="http://blog.url.com/articles/vim/thingspast-vim-released.html"/>
    <id>http://blog.url.com/articles/vim/thingspast-vim-released.html</id>
    <published>2013-12-05T15:00:00Z</published>
    <updated>2014-01-24T11:35:37+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://atnd.org/events/45072"&gt;Vim Advent Calendar 2013&lt;/a&gt;、5日目の記事になります。プラグインの完成が遅れ、遅刻力を発揮してしまいました…。&lt;/p&gt;

&lt;h2 id="toc_0"&gt;ThingsPast.vimをリリースしました&lt;/h2&gt;

&lt;p&gt;ThingsPast.vimというプラグインをリリースしました。 これは、Mac OS Xの通知センターのようなものをVim内で実装したものです。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/supermomonga/thingspast.vim"&gt;https://github.com/supermomonga/thingspast.vim&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Macをお持ちでない方のために簡単に説明すると、通知センターは各アプリケーションによるユーザーへの「通知」をハンドリングする機能です。Twitterの新着リプライや新着受信メールなどといった通知の一覧表示や、通知一覧からの選択によってアプリケーションを適切な状態で起動、たとえば通知された新着メールをクリックするとそのメールが選択された状態でメーラーを起動するなど、を行うことができます。&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/uploads/2013-12-notifcenter.png" alt="notifcenter" width="314" height="350" class="aligncenter size-full wp-image-978" /&gt;&lt;/p&gt;

&lt;p&gt;ThingsPast.vimは、これをVim内で再実装したものです。&lt;/p&gt;

&lt;h2 id="toc_1"&gt;ThingsPast.vimのメリット&lt;/h2&gt;

&lt;p&gt;Vimで動作するTwitterクライアントやメーラー、Lingrクライアントなど、Vimをプラットフォームとして動作するアプリケーションがあります。これらの新着通知をハンドリングする手段としては、今までGrowlなどのOSレベルの通知アプリケーションと連携して通知を行われるのが一般的でした。&lt;/p&gt;

&lt;p&gt;ですが、この方法には欠点があります。それは、OSから見て、通知元のアプリケーションは単にVimでしかなく、Vimで動作しているどのアプリケーションからの通知であるのかといった情報のハンドリングが難しいことです。&lt;/p&gt;

&lt;p&gt;たとえば、TweetVimというVimで動作するTwitterクライアントがありますが、TweetVimからの「新着リプライ」通知をMac OS Xの通知センターに表示すること自体は可能なものの、それを通知一覧から選択した際にVimを起動し、その中でTweetVimを起動し、該当のリプライや会話を表示する、といった動作を行わせることはかなり難しいのです。&lt;/p&gt;

&lt;p&gt;ThingsPast.vimは、Vim内に独立した通知管理システムを構築することで、こういった問題を解決しました。&lt;/p&gt;

&lt;h2 id="toc_2"&gt;ThingsPast.vimの動作風景&lt;/h2&gt;

&lt;p&gt;&lt;img src="/images/uploads/2013-12-Screen-Shot-2013-12-06-at-01.05.07.png" alt="Screen Shot 2013-12-06 at 01.05.07" width="784" height="560" class="aligncenter size-full wp-image-979" /&gt;&lt;/p&gt;

&lt;p&gt;ThingsPast.vimをインストールし、&lt;code&gt;&amp;lt;Space&amp;gt;n&lt;/code&gt;を打鍵すると、Vimのウィンドウが縦に分割され、右側にプラグインごとの通知一覧が表示されます。&lt;code&gt;j&lt;/code&gt;,&lt;code&gt;k&lt;/code&gt;で通知を選択でき、選択した状態で&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;（Enter）を打鍵すると、プラグインごとに最適な処理が実行され、その後通知一覧から通知は消えます。&lt;/p&gt;

&lt;h2 id="toc_3"&gt;ThingsPast.vimの想定利用シーン&lt;/h2&gt;

&lt;p&gt;ThingsPast.vimの想定している利用シーンとして、以下の様なものがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://github.com/basyura/TweetVim"&gt;TweetVim&lt;/a&gt;（Twitterクライアント） 

&lt;ul&gt;
&lt;li&gt;  新着リプライ通知&lt;/li&gt;
&lt;li&gt;  新着DM通知&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/basyura/J6uil.vim"&gt;J6uil.vim&lt;/a&gt;（Lingrクライアント） 

&lt;ul&gt;
&lt;li&gt;  新着メッセージ通知&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/yuratomo/gmail.vim"&gt;Gmail.vim&lt;/a&gt;（Gmailクライアント） 

&lt;ul&gt;
&lt;li&gt;  新着メール通知&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/Shougo/vimshell.vim"&gt;VimShell.vim&lt;/a&gt;（ターミナルエミュレータ） 

&lt;ul&gt;
&lt;li&gt;  時間がかかった処理が終了した際、VimShellがアクティブバッファでない場合、通知をする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ThingsPast.vimで通知を受け取るには、それぞれのプラグインからThingsPast.vimが提供しているAPI関数をコールする必要があります。ですので、hookの仕組みが実装されているプラグインとの連携を、vimrcの設定で記述することができます。この辺りについて、詳しくはヘルプドキュメントの方をご覧ください。&lt;/p&gt;

&lt;p&gt;実際には、上記のプラグインにはhook機能が不足しておりThingsPast.vimとの連携ができないものが多いのが現状です。&lt;/p&gt;

&lt;p&gt;ThingsPast.vimが一応のリリースに漕ぎ着けましたので、それらプラグインにhook機能を実装しPull Requestを送りたいなと考えています。&lt;/p&gt;

&lt;h2 id="toc_4"&gt;今後の実装予定と課題&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  設定例の充実化 

&lt;ul&gt;
&lt;li&gt;  そのためにはまず、Hook追加のPull Requestを送りまくることになりそうです&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;  シンタックスハイライトの実装 

&lt;ul&gt;
&lt;li&gt;  もっと見栄えをかっこよくしたいです&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;  アニメーションの自走 

&lt;ul&gt;
&lt;li&gt;  選択中の通知は、省略されたメッセージが右から左に流れて全文を読めるようにしたいです&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;  Hookの実装 

&lt;ul&gt;
&lt;li&gt;  これにより、通知が追加された際に&lt;a href="https://github.com/supermomonga/shaberu.vim"&gt;Shaberu.vim&lt;/a&gt;で音声通知を行う、といったことができるようになります&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;  新着通知が追加されたプラグインを上に表示する用に、並び順を改善&lt;/li&gt;
&lt;li&gt;  ステータスラインに通知数を表示することなどができるように、外部からの利用を想定した便利関数の実装&lt;/li&gt;
&lt;li&gt;  コードのリファクタリング 

&lt;ul&gt;
&lt;li&gt;  VimAdventCalendarに間に合わせるために、所々に妥協した面が見えます…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;  ユニットテストの充実化&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;12月7日に開催されるTokyoVimでは、ThingsPast.vimのリファクタリングや機能追加など、重点的に行いたいと思います。&lt;/p&gt;

&lt;h2 id="toc_5"&gt;謝辞&lt;/h2&gt;

&lt;p&gt;ThingsPast.vimは私にとって初めての独自バッファを作成するプラグインであり、Vim scriptプログラミングの経験が浅い私にとって、かなり手探りでの実装となりました。プラグインを作成するにあたってLingrのVim部屋にて多数の方から様々なアドバイスを頂戴し、なんとか完成に至ったという次第です。 アドバイスをくださった皆さまに、この場を借りてお礼申し上げます。&lt;/p&gt;

&lt;h2 id="toc_6"&gt;Vim Advent Calendar 2013 6日目は&lt;/h2&gt;

&lt;p&gt;明日、というか今日ですが、の担当は@kaoriyaさんです。よろしくお願いします！&lt;/p&gt;
</content>
  </entry>
</feed>
